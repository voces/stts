diff --git a/node_modules/w3ts/handles/handle.d.ts b/node_modules/w3ts/handles/handle.d.ts
index 97491cd..8e105a3 100644
--- a/node_modules/w3ts/handles/handle.d.ts
+++ b/node_modules/w3ts/handles/handle.d.ts
@@ -1,8 +1,8 @@
 /// <reference types="war3-types-strict/1.33.0" />
 /** @noSelfInFile */
 export declare class Handle<T extends handle> {
-    readonly handle: T;
-    private static initHandle;
+    handle: T;
+    static initHandle: handle | undefined;
     protected constructor(handle?: T);
     /**
      * Get the unique ID of the handle. The ID is recycled once you destroy the object.
diff --git a/node_modules/w3ts/handles/player.d.ts b/node_modules/w3ts/handles/player.d.ts
index afbceb7..d3cceef 100644
--- a/node_modules/w3ts/handles/player.d.ts
+++ b/node_modules/w3ts/handles/player.d.ts
@@ -8,7 +8,7 @@ export declare class MapPlayer extends Handle<player> {
     /**
      * @deprecated use `MapPlayer.create` instead.
      */
-    private constructor();
+    protected constructor(index: number);
     private static create;
     set color(color: playercolor);
     get color(): playercolor;
diff --git a/node_modules/w3ts/handles/player.lua b/node_modules/w3ts/handles/player.lua
index febb3c7..ff2a60f 100644
--- a/node_modules/w3ts/handles/player.lua
+++ b/node_modules/w3ts/handles/player.lua
@@ -308,4 +308,20 @@ function MapPlayer.fromLocal(self)
     end
     return self:fromHandle(pl)
 end
+local WeakMap = ____lualib.WeakMap
+local __TS__New = ____lualib.__TS__New
+local map = __TS__New(WeakMap)
+function MapPlayer.getObject(self, player)
+    local obj = map:get(player)
+    if obj ~= nil then
+        return obj
+    end
+    local next = __TS__New(
+        ____exports.MapPlayer,
+        GetPlayerId(player)
+    )
+    next.handle = player
+    map:set(player, next)
+    return next
+end
 return ____exports
diff --git a/node_modules/w3ts/handles/timer.d.ts b/node_modules/w3ts/handles/timer.d.ts
index d9a9a20..ac71594 100644
--- a/node_modules/w3ts/handles/timer.d.ts
+++ b/node_modules/w3ts/handles/timer.d.ts
@@ -15,7 +15,7 @@ export declare class Timer extends Handle<timer> {
     destroy(): this;
     pause(): this;
     resume(): this;
-    start(timeout: number, periodic: boolean, handlerFunc: () => void): this;
+    start(timeout: number, periodic: boolean, handlerFunc?: (() => void) | null): this;
     /**
      * @bug Might crash the game if called when there is no expired timer.
      */
diff --git a/node_modules/w3ts/hooks/index.lua b/node_modules/w3ts/hooks/index.lua
index b395d8c..44e3a84 100644
--- a/node_modules/w3ts/hooks/index.lua
+++ b/node_modules/w3ts/hooks/index.lua
@@ -13,7 +13,12 @@ ____exports.executeHooksMainBefore = function() return __TS__ArrayForEach(
 ) end
 ____exports.executeHooksMainAfter = function() return __TS__ArrayForEach(
     hooksMainAfter,
-    function(____, func) return func() end
+    function(____, func)
+        local status, err = pcall(func)
+        if err then
+            BJDebugMsg(err)
+        end
+    end
 ) end
 function ____exports.hookedMain()
     ____exports.executeHooksMainBefore()
diff --git a/node_modules/w3ts/system/file.lua b/node_modules/w3ts/system/file.lua
index b05ed7b..064f8ea 100644
--- a/node_modules/w3ts/system/file.lua
+++ b/node_modules/w3ts/system/file.lua
@@ -40,19 +40,22 @@ function File.unescape(self, contents)
 end
 function File.read(self, filename)
     local originalIcon = BlzGetAbilityIcon(self.dummyAbility)
+    local originalTooltip = BlzGetAbilityTooltip(self.dummyAbility, 0)
     if originalIcon == nil then
         return nil
     end
     Preloader(filename)
     local preloadText = BlzGetAbilityIcon(self.dummyAbility)
-    if preloadText == nil then
-        return nil
+    if preloadText == nil or preloadText == originalIcon then
+        preloadText = BlzGetAbilityTooltip(self.dummyAbility, 0)
+        if preloadText == nil or preloadText == originalTooltip then
+            return nil
+        end
+        preloadText = string.sub(preloadText, 2)
     end
     BlzSetAbilityIcon(self.dummyAbility, originalIcon)
-    if preloadText ~= originalIcon then
-        return ____exports.File:unescape(preloadText)
-    end
-    return nil
+    BlzSetAbilityTooltip(self.dummyAbility, originalTooltip, 0)
+    return ____exports.File:unescape(preloadText)
 end
 function File.writeRaw(self, filename, contents, allowReading)
     if allowReading == nil then
diff --git a/node_modules/w3ts/system/sync.lua b/node_modules/w3ts/system/sync.lua
index fe68445..5c78557 100644
--- a/node_modules/w3ts/system/sync.lua
+++ b/node_modules/w3ts/system/sync.lua
@@ -203,7 +203,7 @@ end
 function SyncRequest.onSync(self)
     local syncPrefix = BlzGetTriggerSyncPrefix()
     local syncData = BlzGetTriggerSyncData()
-    if syncPrefix == nil or syncData == nil then
+    if syncPrefix == nil or syncData == nil or (syncPrefix ~= SYNC_PREFIX and syncPrefix ~= SYNC_PREFIX_CHUNK) then
         return
     end
     local packet = __TS__New(SyncIncomingPacket, syncPrefix, syncData)
